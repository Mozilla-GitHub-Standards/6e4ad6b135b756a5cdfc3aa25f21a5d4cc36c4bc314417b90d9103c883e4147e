user root;

worker_processes auto;
events {
  worker_connections 1024;
}

http {
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;
  server_names_hash_bucket_size 128;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  log_format proxxy '$remote_addr - $upstream_cache_status - $host [$time_local]  '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent"';

  access_log /var/log/proxxy/access.log proxxy;
  error_log  /var/log/proxxy/error.log;

  proxy_temp_path   /var/cache/proxxy/tmp;

  server {
    listen 80;
    server_name _;

    location / {
      return 404;
    }

    location /heartbeat {
      default_type text/plain;
      return 200 "200 OK";
    }
  }

  {% for name, params in config['backends'].iteritems() %}
  proxy_cache_path  /var/cache/proxxy/{{ name }} levels=1:2 keys_zone={{ name }}:8m max_size={{ params['size'] }} inactive={{ params['ttl'] }};

  server {
    listen 80;
    server_name {{ name }};

    location / {
      add_header X-Proxxy $upstream_cache_status;
      proxy_pass {{ params['path'] }};
      proxy_cache {{ name }};
      proxy_cache_valid {{ params['ttl'] }};
      {% if 'username' in params and 'password' in params -%}
        proxy_set_header Authorization "Basic {{ (params['username'] + ':' + params['password']) | b64encode }}";
        proxy_hide_header WWW-Authenticate;
      {%- endif %}
    }
  }
  {% endfor %}
}
