- name: install Python
  sudo: true
  apt: pkg={{ item }}
  with_items:
    - python
    - python-pip

- name: install Python packages
  sudo: true
  pip: name={{ item }}
  with_items:
    - invoke
    - boto

- name: create directory
  sudo: true
  file: >
    path={{ proxxy.dir }}
    state=directory
    recurse=true
    owner={{ ansible_ssh_user }}
    group={{ ansible_ssh_user }}
  when: not proxxy.skip_git_clone

- name: clone repository
  git: >
    repo={{ proxxy.repo }}
    dest={{ proxxy.dir }}
    version={{ proxxy.version }}
  notify:
    - rebuild proxxy
  when: not proxxy.skip_git_clone

- name: generate app/nginx.conf
  template: >
    src=nginx.conf.j2
    dest="{{ proxxy.dir }}/app/nginx.conf"
    mode=0600

- name: generate packer/diamond.conf
  template: >
    src=diamond.conf.j2
    dest="{{ proxxy.dir }}/packer/diamond.conf"
    mode=0600

- name: create ~/.ec2 directory
  file: >
    path=~/.ec2
    state=directory

- name: copy EC2 certificate
  copy: >
    content='{{ proxxy.packer.ec2_ceriticate }}'
    dest=~/.ec2/cert.pem
    mode=0644

- name: copy EC2 private key
  copy: >
    content='{{ proxxy.packer.ec2_private_key }}'
    dest=~/.ec2/pk.pem
    mode=0600

- name: generate .envrc
  template: >
    src=envrc.j2
    dest="{{ proxxy.dir }}/.envrc"
    mode=0644

- name: allow .envrc
  command: >
    /usr/local/bin/direnv allow
    chdir={{ proxxy.dir }}
  register: result
  changed_when: result.rc != 0
